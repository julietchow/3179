df <- read.csv("netflix1.csv")
df
df[country]
df["country"]
df["country"].unique()
df["country"].unique
unique(df["country"])
df <- read.csv("netflix1.csv")
unique(df["country"])
df
df["date_added"]
type(df["date_added"])
df["date_added"].type()
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Load the lubridate library for date manipulation
library(lubridate)
install.packages("lubridate")
# Load the lubridate library for date manipulation
library(lubridate)
load('lubridate')
load.library('lubridate')
df$year_added <- year(df$date_added)
df
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
library(dplyr)
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
print(result_df)
result_df
print(n = result_df)
# Create separate columns for movies and TV shows
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows, names_prefix = "count_of_")
# Load the tidyr library
library(tidyr)
# Create separate columns for movies and TV shows
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows, names_prefix = "count_of_")
# Print the modified result DataFrame
print(result_df)
# Convert tibble to a data frame
result_df <- as.data.frame(result_df)
# Save the data frame as a CSV file
write.csv(result_df, file = "choropleth_map_file.csv", row.names = FALSE)
# Load the lubridate library for date manipulation
library(lubridate)
library(tidyr)
df <- read.csv("netflix1.csv")
df["date_added"]
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Create separate columns for movies and TV shows
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows)
result_df <- result_df %>%
group_by(country, year_added) %>%
mutate(total_count = sum(count_of_Movie, count_of_TV_Show))
# Convert tibble to a data frame
result_df <- as.data.frame(result_df)
# Save the data frame as a CSV file
write.csv(result_df, file = "choropleth_map_file.csv", row.names = FALSE)
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Create separate columns for movies and TV shows
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows)
# Load the lubridate library for date manipulation
library(lubridate)
library(tidyr)
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Create separate columns for movies and TV shows
result_df <- df %>%
pivot_wider(names_from = type, values_from = count_of_shows)
result_df <- result_df %>%
group_by(country, year_added) %>%
mutate(total_count = sum(count_of_Movie, count_of_TV_Show))
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Group the data by "type," "country," and "year_added" and calculate the count
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows, names_prefix = "count_of_")
result_df <- result_df %>%
group_by(country, year_added) %>%
mutate(total_count = sum(count_of_Movie, count_of_TV_Show))
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Group the data by "type," "country," and "year_added" and calculate the count
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows, names_prefix = "count_of_")
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows, names_prefix = "count_of_")
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Group the data by "type," "country," and "year_added" and calculate the count
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows, names_prefix = "count_of_")
print(result_df)
result_df <- result_df %>%
group_by(country, year_added) %>%
mutate(total_count = sum(count_of_Movie, count_of_TV_Show))
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Group the data by "type," "country," and "year_added" and calculate the count
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows, names_prefix = "count_of_")
# Replace NA values with 0 in both columns
result_df <- result_df %>%
mutate(count_of_Movie = replace(count_of_Movie, is.na(count_of_Movie), 0),
count_of_TV_Show = replace(count_of_TV_Show, is.na(count_of_TV_Show), 0))
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Group the data by "type," "country," and "year_added" and calculate the count
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows, names_prefix = "count_of_")
# Replace NA values with 0 in both columns
result_df <- result_df %>%
mutate(count_of_Movie = replace(count_of_Movie, is.na(count_of_Movie), 0),
count_of_TV_Show = replace(count_of_TV_Show, is.na(count_of_TV Show), 0))
print(result_df)
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Group the data by "type," "country," and "year_added" and calculate the count
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows, names_prefix = "count_of_")
# Replace NA values with 0 in both columns
result_df <- result_df %>%
mutate(count_of_Movie = replace(count_of_Movie, is.na(count_of_Movie), 0),
count_of_TV_Show = replace(count_of_TV_Show, is.na(count_of_TV Show), 0))
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Group the data by "type," "country," and "year_added" and calculate the count
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows, names_prefix = "count_of_")
# Replace NA values with 0 in both columns
result_df <- result_df %>%
mutate(count_of_Movie = replace(count_of_Movie, is.na(count_of_Movie), 0),
count_of_TV_Show = replace(count_of_TV Show, is.na(count_of_TV Show), 0))
# Replace NA values with 0 in both columns
result_df <- result_df %>%
mutate(count_of_Movie = replace(count_of_Movie, is.na(count_of_Movie), 0),
count_of_TV Show = replace(count_of_TV Show, is.na(count_of_TV Show), 0))
# Rename the columns
result_df <- result_df %>%
rename(country = country,
year = year_added,
movie = count_of_Movie,
tv_show = count_of_TV_Show)
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Group the data by "type," "country," and "year_added" and calculate the count
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows, names_prefix = "count_of_")
# Rename the columns
result_df <- result_df %>%
rename(country = country,
year = year_added,
movie = count_of_Movie,
tv_show = count_of_TV_Show)
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Group the data by "type," "country," and "year_added" and calculate the count
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows, names_prefix = "count_of_")
# Rename the columns
result_df <- result_df %>%
rename(country = country,
year = year_added,
movie = count_of_Movie,
tv_show = count_of_TV Show)
# Replace NA values with 0 in both columns
result_df <- result_df %>%
mutate(count_of_Movie = replace(count_of_Movie, is.na(count_of_Movie), 0),
count_of_TV Show = replace(count_of_TV Show, is.na(count_of_TV Show), 0))
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Group the data by "type," "country," and "year_added" and calculate the count
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows, names_prefix = "count_of_")
print(result_df)
# Rename the columns
result_df <- result_df %>%
rename(country = country,
year = year_added,
movie = count_of_Movie,
tv_show = 'count_of_TV Show')
# Replace NA values with 0 in both columns
result_df <- result_df %>%
mutate(movie = replace(movie, is.na(movie), 0),
tv_show = replace(tv_show, is.na(tv_show), 0))
print(result_df)
result_df <- result_df %>%
group_by(country, year_added) %>%
mutate(total_count = sum(movie, tv_show))
result_df <- result_df %>%
group_by(country, year) %>%
mutate(total_count = sum(movie, tv_show))
print(result_df)
# Convert tibble to a data frame
result_df <- as.data.frame(result_df)
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Group the data by "type," "country," and "year_added" and calculate the count
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows, names_prefix = "count_of_")
print(result_df)
# Rename the columns
result_df <- result_df %>%
rename(country = country,
year = year_added,
movie = count_of_Movie,
tv_show = 'count_of_TV Show')
# Replace NA values with 0 in both columns
result_df <- result_df %>%
mutate(movie = replace(movie, is.na(movie), 0),
tv_show = replace(tv_show, is.na(tv_show), 0))
result_df <- result_df %>%
group_by(country, year) %>%
mutate(total_count = sum(movie, tv_show))
# Convert tibble to a data frame
result_df <- as.data.frame(result_df)
# Save the data frame as a CSV file
write.csv(result_df, file = "choropleth_map_file.csv", row.names = FALSE)
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Group the data by "type," "country," and "year_added" and calculate the count
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
# Load the lubridate library for date manipulation
library(lubridate)
library(tidyr)
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Group the data by "type," "country," and "year_added" and calculate the count
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows, names_prefix = "count_of_")
print(result_df)
# Load the lubridate library for date manipulation
library(lubridate)
library(tidyr)
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Group the data by "type," "country," and "year_added" and calculate the count
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
# Load the lubridate library for date manipulation
library(lubridate)
library(tidyr)
library(tidyr)
library(dplyr)
# Load the lubridate library for date manipulation
library(lubridate)
library(tidyr)
library(dplyr)
df <- read.csv("netflix1.csv")
# Convert "date_added" to a Date object and extract the year
df$date_added <- as.Date(df$date_added, format = "%m/%d/%Y")
df$year_added <- year(df$date_added)
# Group the data by "type," "country," and "year_added" and calculate the count
result_df <- df %>%
group_by(type, country, year_added) %>%
summarize(count_of_shows = n())
result_df <- result_df %>%
pivot_wider(names_from = type, values_from = count_of_shows, names_prefix = "count_of_")
print(result_df)
# Rename the columns
result_df <- result_df %>%
rename(country = country,
year = year_added,
movie = count_of_Movie,
tv_show = 'count_of_TV Show')
# Replace NA values with 0 in both columns
result_df <- result_df %>%
mutate(movie = replace(movie, is.na(movie), 0),
tv_show = replace(tv_show, is.na(tv_show), 0))
result_df <- result_df %>%
group_by(country, year) %>%
mutate(total_count = sum(movie, tv_show))
# Convert tibble to a data frame
result_df <- as.data.frame(result_df)
# Save the data frame as a CSV file
write.csv(result_df, file = "choropleth_map_file.csv", row.names = FALSE)
